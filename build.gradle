plugins {
    id 'com.github.johnrengelman.shadow' version '7+'
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

shadowJar {
    manifest {
        attributes(
                "Main-Class" : "xyz.xzaslxr.jsniffer.SnifferApplication"
        )
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.13'
    implementation 'org.slf4j:slf4j-nop:1.7.21'
    implementation 'org.pcap4j:pcap4j-core:1.8.2'
    implementation 'org.pcap4j:pcap4j-packetfactory-static:1.8.2'
    implementation 'net.java.dev.jna:jna:5+'
}


task exportDeps(type: Copy) {
    from configurations.runtimeClasspath
    into 'libs'
}

group 'xyz.xzaslxr'
version '1.0'


repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'xyz.xzaslxr.jsniffer'
    mainClass = 'xyz.xzaslxr.jsniffer.SnifferApplication'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}